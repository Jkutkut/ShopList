---
import ThemeToggle from "./themeToggle.astro";

interface Props {
  mobileTitle: string;
  options: { name: string; url: string }[];
  icon?: string;
}

const { mobileTitle, options, icon }: Props = Astro.props;
options.forEach((option) => {
  if (option.url.startsWith("./")) {
    option.url = Astro.url.pathname + option.url.slice(1);
  }
});
---

<header>
  <nav class="col">
    <div class="row">
      <div class="desktop-only center gap">
        {options.map((option) => <a href={option.url}>{option.name}</a>)}
      </div>
      <div class="mobile-only flex align-center">
        {mobileTitle}
      </div>
      <div id="nav-right">
        <ThemeToggle tabIndex={0} />
        {
          icon && (
            <div class="desktop-only center nav-icon">
              <img src={icon} alt={mobileTitle} />
            </div>
            <a id="mobile-nav-menu-toggle" class="mobile-only nav-icon">
              <img src={icon} alt={mobileTitle} />
            </a>
          ) || (
            <button id="mobile-nav-menu-toggle" class="mobile-only">
              <div />
              <div />
              <div />
            </button>
          )
        }
      </div>
    </div>
    <div id="mobile-nav-menu" class="hidden col">
      {options.map((option) => <a href={option.url}>{option.name}</a>)}
    </div>
  </nav>
</header>

<script>
  {
    const mobileNavMenuToggle = document.getElementById(
      "mobile-nav-menu-toggle"
    );
    const mobileNavMenu = document.getElementById("mobile-nav-menu");
    mobileNavMenuToggle?.addEventListener("click", () => {
      mobileNavMenu?.classList.toggle("hidden");
      if (!mobileNavMenu?.classList.contains("hidden")) {
        mobileNavMenu?.focus();
      }
    });
    mobileNavMenu?.addEventListener("focusout", () => {
      const relatedTarget = event.relatedTarget;
      if (!mobileNavMenu.contains(relatedTarget as Node)) {
        mobileNavMenu?.classList.add("hidden");
      }
    });
  }
</script>

<style>
  nav {
    padding-right: 0.5rem;
    padding-left: 0.5rem;
    border-bottom: 2px solid var(--border);
    padding: 1rem;
  }

  nav > div.row {
    width: 100%;
  }

  #nav-right {
    display: flex;
    justify-content: end;
    margin-left: auto;
    margin-right: 0;
    gap: 0.5rem;
  }

  #mobile-nav-menu {
    gap: 0.5rem;
    background: var(--txt-bg-s);
    padding: 0.5rem;
    margin-left: auto;
    margin-right: 0;
    justify-content: end;
    min-width: 40%;

    position: absolute;
    top: calc(2rem + 2rem);
    right: 0;
  }

  #mobile-nav-menu-toggle {
    gap: 0.4rem;
    flex-direction: column;
    justify-content: center;
    background: var(--txt-bg-s);
    border: 0;
    padding: 0.6rem;
    border-radius: 0.25rem;

    div {
      width: 1.25rem;
      height: 2px;
      background: var(--txt-color-s);
    }
  }

  a#mobile-nav-menu-toggle {
    padding: 0;
    margin: 0;
  }

  .nav-icon img {
    width: 2rem;
    height: 2rem;
    object-fit: cover;
  }

  .hidden {
    display: none;
  }
</style>
