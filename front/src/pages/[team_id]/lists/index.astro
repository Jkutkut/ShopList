---
import Debug from "../../../layouts/debug.astro";
import { OPTIONS, TEAMS } from "../../../mockup";
import { asUrl } from "../../../utils";

const { team_id } = Astro.params;

const team = TEAMS.find(t => t.id === team_id);
if (!team) {
  return Astro.redirect('/teams', 302);
}

const lists = team.lists;

---
<Debug
  title="Lists"
  description="Manage your lists"
  options={OPTIONS['lists']}
>
  <section>
    <h1>Select a list or create one</h1>
  </section>
  <section class="col gap">
    {lists.map(list => (
      <a href={asUrl(`./${list.id}`, Astro)}>
        <div class="list-card col">
          <div class="row gap space-between">
            <h2>{list.name}</h2>
            <label>
              Total {"XXX"} elements
            </label>
          </div>
          <div class="row gap space-between">
            <div class="col">
              {list.description &&
                <p>{list.description}</p>
              }
              <p>
                Last modified by {list.updatedBy} at
                <label class="date2format" data-date={list.updatedAt}></label>
              </p>
            </div>
            <div class="col">
              {list.image &&
                <img src={list.image} alt={list.name} />
              }
            </div>
          </div>
        </div>
      </a>
    ))}
  </section>
  <section>
    <a href={asUrl("./new", Astro)} class="btn btn-primary">Create a new list</a>
  </section>
</Debug>

<style>
  .list-card {
    --img-size: 128px;

    padding: 1rem;
    border: 2px solid var(--border);
    border-radius: 0.5rem;

    display: flex;
  }

  .list-card img {
    aspect-ratio: 1 / 1;
    width: var(--img-size);
    height: auto;
    object-fit: cover;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
  }
</style>

<script>
  const date2str = (date: Date | string | number) => {
    if (typeof date !== "object") {
      date = new Date(date);
    }
    const now = new Date();
    const diff = now.getTime() - date.getTime();
    if (diff < 60000) { // < 1 min
      return "just now";
    }
    if (diff < 1800000) { // < 30 min
      const minutes = Math.floor(diff / 60000);
      return `${minutes} minutes ago`;
    }
    const time = date.toLocaleTimeString();
    if (diff < 86400000 && date.getDay() === now.getDay()) { // < 1 day
      return time;
    }
    const day = date.toLocaleDateString();
    return `${time} ${day}`;
  };
  document.querySelectorAll('.date2format').forEach(el => {
    const DATE_ATTR = "data-date";
    if (!el.hasAttribute(DATE_ATTR)) {
      console.warn(`date2format without ${DATE_ATTR} found`);
      return;
    }
    const date = new Date(el.getAttribute(DATE_ATTR)!);
    el.textContent = date2str(date);
  });
</script>
