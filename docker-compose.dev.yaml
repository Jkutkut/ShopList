services:
  db:
    container_name: shoplist-db
    hostname: shoplist-db
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - db-network
  valkey:
    networks:
      - db-network
  auth:
    container_name: shoplist-auth
    hostname: shoplist-auth
    build:
      context: ./backend/
      dockerfile: Dockerfile
      target: builder
    environment:
      ENV_PATH: "/shoplist/.env"
      RUST_LOG: "warn,auth=debug,model=debug"
    volumes:
      - cargo_registy:/root/.cargo/registry
      - .:/shoplist
    working_dir: /shoplist/backend
    entrypoint: cargo
    command: watch -- cargo run -p auth
    networks:
      - db-network
      - auth-network
  api:
    container_name: shoplist-api
    hostname: shoplist-api
    build:
      context: ./backend/
      dockerfile: Dockerfile
      target: builder
    volumes:
      - cargo_registy:/root/.cargo/registry
      - .:/shoplist
    working_dir: /shoplist/backend
    environment:
      RUST_LOG: "warn,api=debug,model=debug,rocket=info"
      ROCKET_CONFIG: /shoplist/backend/api/Rocket.toml
      ROCKET_SECRET_KEY: ${ROCKET_SECRET_KEY}
    entrypoint: cargo
    command: watch -- cargo run -p api
    networks:
      - auth-network
      - api-network
  front:
    container_name: shoplist-front
    hostname: shoplist-front
    image: node:20
    volumes:
      - .:/shoplist
    working_dir: /shoplist/front
    command: npm run dev
    ports:
      - "4321:4321"
    networks:
      - api-network
  nginx:
    networks:
      - api-network
volumes:
  db_data:
  cargo_registy:
networks:
  db-network:
    driver: bridge
  auth-network:
    driver: bridge
  api-network:
    driver: bridge
