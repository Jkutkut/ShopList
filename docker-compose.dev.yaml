services:
  db:
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - db-network
  valkey:
    networks:
      - db-network
  auth:
    build:
      context: ./backend/
      dockerfile: Dockerfile
      target: builder
    environment:
      ENV_PATH: "/shoplist/.env"
    volumes:
      - cargo_registy:/root/.cargo/registry
      - .:/shoplist
    working_dir: /shoplist/backend
    entrypoint: cargo
    command: watch -- cargo run -p auth
    networks:
      - db-network
      - auth-network
  api:
    build:
      context: ./backend/
      dockerfile: Dockerfile
      target: builder
    volumes:
      - cargo_registy:/root/.cargo/registry
      - .:/shoplist
    working_dir: /shoplist/backend
    environment:
      ROCKET_CONFIG: /shoplist/backend/api/Rocket.toml
      ROCKET_SECRET_KEY: ${ROCKET_SECRET_KEY}
    entrypoint: cargo
    command: watch -- cargo run -p api
    networks:
      - auth-network
      - api-network
  nginx:
    networks:
      - api-network
volumes:
  cargo_registy:
networks:
  db-network:
    driver: bridge
  auth-network:
    driver: bridge
  api-network:
    driver: bridge
